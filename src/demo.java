
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.regex.*;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Stan
 */
public class demo extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement stmt;
    DefaultTableModel model;
    String url = "jdbc:mysql://localhost:3306/payroll";
    String un = "root";
    String pas = "root";

    public demo() {
        initComponents();
        show_user();
    }

    public void autoIncrement() {

        try {
            String query = "select MAX(salary_ID) FROM salary";
//            String query1 = "SELECT MAX (accountID) FROM account";
//            String query2 = "SELECT MAX(timeID) FROM time";

            conn = DriverManager.getConnection(url, un, pas);
            stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();
            rs.next();

            String max = rs.getString("MAX(salary_ID)");
//            String max1 = rs.getString("MAX(accountID)");
//            String max2 = rs.getString ("MAX(timeID)");

//&& max1 == null
            if (max == null ) {
                sID.setText("PS001");
//                aID.setText("PA001");
            } else {
                // Auto increment for the salary identity
                long salaryID = Long.parseLong(max.substring(2, max.length()).trim());
                salaryID++;

                // Auto increment for the account identity
                // long accountID = Long.parseLong(max.substring(2, max.length()).trim());
                // accountID++;

                sID.setText(String.format("PS" + "%03d", salaryID));
                // aID.setText(String.format("PA" + "%03d", accountID));
            }

        } catch (SQLException ex) {
            Logger.getLogger(EmployeeSignUp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(EmployeeSignUp.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public ArrayList<Payments> userlist() {
        ArrayList<Payments> userslist = new ArrayList<>();

        try {
            //loading the payroll database
            conn = DriverManager.getConnection(url, un, pas);

//          creates sql statements
            String sql = "SELECT * FROM empinfor";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

//            loops through the array
            Payments user;
            while (rs.next()) {
                // rs.getInt("employeeID"),
                user = new Payments( rs.getString("firstName"), rs.getString("middleName"), rs.getString("lastName"),
                        rs.getString("NRC_Number"), rs.getString("address"), rs.getString("position"), rs.getInt("phoneNumber"));

                userslist.add(user);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return userslist;
    }

    public void show_user() {
        ArrayList<Payments> list = userlist();

        //initializing the table created
        this.model = (DefaultTableModel) table.getModel();

        //creating a new row with new values
        model.setRowCount(0);

        Object[] row = new Object[8];

        //looping through the array
        for (int i = 0; i < list.size(); i++) {
//            row[0] = list.get(i).getEmpID();
            row[1] = list.get(i).getFname();
            row[2] = list.get(i).getMname();
            row[3] = list.get(i).getLname();
            row[4] = list.get(i).getNRC_num();
            row[5] = list.get(i).getAddress();
            row[6] = list.get(i).getDep();
            row[7] = list.get(i).getPhnNumber();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dw = new javax.swing.JTextField();
        hw = new javax.swing.JTextField();
        td = new javax.swing.JTextField();
        oh = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hp = new javax.swing.JTextField();
        jh = new javax.swing.JLabel();
        op = new javax.swing.JTextField();
        jLabel = new javax.swing.JLabel();
        sal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        calc = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        ca = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        gp = new javax.swing.JTextField();
        np = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        sID = new javax.swing.JLabel();
        eID = new javax.swing.JLabel();
        aID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Days Worked / Month");

        jLabel2.setText("Hours Worked / Month");

        jLabel3.setText("Overtime Hours");

        jLabel4.setText("Tax");

        jh.setText("Hourly Pay");

        jLabel.setText("Overtime Pay");

        sal.setText("salary");

        jLabel8.setText("Monthly Salary");

        calc.setText("Calculate");
        calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcActionPerformed(evt);
            }
        });

        jButton2.setText("Give Pay");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Net Pay");

        jLabel10.setText("Cash Advance");

        jLabel11.setText("Gross Pay");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPLOYEE ID", "FIRSTNAME", "MIDDLENAME", "LASTNAME", "PHONE NUMBER", "ADDRESS", "NRC Number", "EMAIL", "DEPARTMENT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(6).setResizable(false);
            table.getColumnModel().getColumn(7).setResizable(false);
            table.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel5.setText("SALARY ID");

        jLabel6.setText("EMPLOYEE ID");

        jLabel7.setText("ACCOUNT ID");

        sID.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        sID.setText("jLabel12");

        eID.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        eID.setText("jLabel12");

        aID.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        aID.setText("jLabel12");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(41, 41, 41)
                        .addComponent(sal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(264, 264, 264))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hp)
                        .addComponent(td)
                        .addComponent(dw))
                    .addComponent(jLabel5)
                    .addComponent(sID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(433, 433, 433))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calc)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gp, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(np, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel10))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(140, 140, 140))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(149, 149, 149))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ca)
                                        .addGap(137, 137, 137)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hw)
                                        .addComponent(oh)
                                        .addComponent(op))
                                    .addComponent(aID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(161, 161, 161))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(td, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(np, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(oh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(op, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30)
                .addComponent(calc)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    double salary = 25000;
    double hourlyPay = 50;
    double overPay, grossPay, tax, netPay, cashAdvc, basicPay;
    int daysWork, hoursWork, overtimeHours, jobRegHours;

    private void calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcActionPerformed
        // TODO add your handling code here:

        int row = table.getSelectedRow();
        String value = (table.getModel().getValueAt(row, 1).toString());

        try {
//            String empID = "SELECT `employeeID` FROM `empdetails`" + eID.getText();
            String sql = "INSERT INTO `time`(`timeID`, `days`, `overtimeHours`, `hoursWorked`) VALUES (?,?,?,?,?)";
            String query = "INSERT INTO `salary`(`salary_ID`, `employee_ID`,`accountID`, `overtimePay`,"
                    + "`cashAdvance`, `tax`, `grossSalary`, `netSalary`) VALUES (?,?,?,?,?,?,?,?)";

            String sql1 = "";

            conn = DriverManager.getConnection(url, un, pas);
//            stmt = conn.prepareStatement(empID);
            stmt = conn.prepareStatement(sql);
            stmt = conn.prepareStatement(query);

            daysWork = Integer.parseInt(dw.getText());
            hoursWork = Integer.parseInt(hw.getText());
            overtimeHours = Integer.parseInt(oh.getText());
            cashAdvc = Double.parseDouble(ca.getText());
            tax = Double.parseDouble(td.getText());

            basicPay = daysWork * hoursWork * hourlyPay;
            overPay = 1.5 * overtimeHours * hourlyPay;
            grossPay = salary - (tax + basicPay);
            netPay = grossPay + overPay;

            dw.setText(String.valueOf(daysWork));
            hw.setText(String.valueOf(hoursWork));
            oh.setText(String.valueOf(overtimeHours));
            ca.setText(String.valueOf(cashAdvc));
            td.setText(String.valueOf(tax));
            hp.setText(String.valueOf(hourlyPay));
            sal.setText(String.valueOf(salary));

            np.setText(String.valueOf(netPay));
            gp.setText(String.valueOf(grossPay));
            op.setText(String.valueOf(overPay));

//            stmt.setString(1, eID.getText());
            stmt.setString(1, dw.getText());
            stmt.setString(2, oh.getText());
            stmt.setString(3, hw.getText());

            stmt.executeUpdate();

            stmt.setString(1, sID.getText());
//            stmt.setString(2, eID.getText());
            stmt.setString(2, aID.getText());
            stmt.setString(3, op.getText());
            stmt.setString(4, ca.getText());
            stmt.setString(5, td.getText());
            stmt.setString(6, gp.getText());
            stmt.setString(7, np.getText());

            stmt.executeUpdate();
            
            autoIncrement();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            // JOptionPane.showMessageDialog(null, "There's a problem connecting to the DataBase...");
        }

    }//GEN-LAST:event_calcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new demo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aID;
    private javax.swing.JTextField ca;
    private javax.swing.JButton calc;
    private javax.swing.JTextField dw;
    private javax.swing.JLabel eID;
    private javax.swing.JTextField gp;
    private javax.swing.JTextField hp;
    private javax.swing.JTextField hw;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jh;
    private javax.swing.JTextField np;
    private javax.swing.JTextField oh;
    private javax.swing.JTextField op;
    private javax.swing.JLabel sID;
    private javax.swing.JLabel sal;
    private javax.swing.JTable table;
    private javax.swing.JTextField td;
    // End of variables declaration//GEN-END:variables
}
